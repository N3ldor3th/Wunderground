//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.13 at 03:42:32 PM CET 
//


package io.spring.guides.gs_producing_web_service;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for windDirection.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="windDirection">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="East"/>
 *     &lt;enumeration value="ENE"/>
 *     &lt;enumeration value="ESE"/>
 *     &lt;enumeration value="NE"/>
 *     &lt;enumeration value="NNE"/>
 *     &lt;enumeration value="NNW"/>
 *     &lt;enumeration value="North"/>
 *     &lt;enumeration value="NW"/>
 *     &lt;enumeration value="SE"/>
 *     &lt;enumeration value="South"/>
 *     &lt;enumeration value="SSE"/>
 *     &lt;enumeration value="SSW"/>
 *     &lt;enumeration value="SW"/>
 *     &lt;enumeration value="Variable"/>
 *     &lt;enumeration value="West"/>
 *     &lt;enumeration value="WNW"/>
 *     &lt;enumeration value="WSW"/>
 *     &lt;enumeration value="ESE"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "windDirection")
@XmlEnum
public enum WindDirection {

    @XmlEnumValue("East")
    EAST("East"),
    ENE("ENE"),
    ESE("ESE"),
    NE("NE"),
    NNE("NNE"),
    NNW("NNW"),
    @XmlEnumValue("North")
    NORTH("North"),
    NW("NW"),
    SE("SE"),
    @XmlEnumValue("South")
    SOUTH("South"),
    SSE("SSE"),
    SSW("SSW"),
    SW("SW"),
    @XmlEnumValue("Variable")
    VARIABLE("Variable"),
    @XmlEnumValue("West")
    WEST("West"),
    WNW("WNW"),
    WSW("WSW");
    private final String value;

    WindDirection(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static WindDirection fromValue(String v) {
        for (WindDirection c: WindDirection.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
